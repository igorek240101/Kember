// <auto-generated />
using System;
using KemberBackModule;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace KemberModel.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("KemberBackModule.Log", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OwnerKey")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PathToFile")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TimeMark")
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.HasIndex("OwnerKey");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("KemberBackModule.User", b =>
                {
                    b.Property<int>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OpenKey")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Key");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KemberBackModule.Log", b =>
                {
                    b.HasOne("KemberBackModule.User", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerKey");

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
